; --- Values enclosed with [ ] are values that are unique to each use case

; #################  PLAYER BLOCKERS  #################
; --- Types: 0 = Everyone, 1 = Survivors, 2 = Player Infected
; --- 3 = All Special Infected (Player and AI), 4 = All players and physics objects
; --- NOTE: Type 4 required boxmins & boxmaxs to be specified in order to function, due to how VPhysics works
add:
{
	"classname" "env_physics_blocker"
	"origin" "[x y z]"
	"mins" "[-x -y -z]"
	"maxs" "[x y z]"
	"initialstate" "1"
	"BlockType" "[n]"
}
; --- With angles
; --- Values from the rotation (CTRL + M) menu in hammer are shifted by 1 place: Hammer -> Stripper
; --- X -> R  /  Y -> P  /  Z -> Y
add:
{
	"classname" "env_physics_blocker"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"mins" "[-x -y -z]"
	"maxs" "[x y z]"
	"boxmins" "[-x -y -z]"
	"boxmaxs" "[x y z]"
	"initialstate" "1"
	"BlockType" "[n]"
}

; ######################  ITEMS  ######################
; --- Props
add:
{
	"classname" "prop_dynamic"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"model" "[file path]"
	"solid" "6"
	"disableshadows" "1"
}
; --- Hittables
{
	"classname" "prop_physics"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"model" "[file path]"
	"solid" "6"
	"fadescale" "0"
}
; --- Ammo Piles
add:
{
	"classname" "weapon_ammo_spawn"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"model" "models/props/terror/ammo_stack.mdl"
	"solid" "6"
	"disableshadows" "1"
	"spawnflags" "2"
	"count" "5"
}
; --- To enable spawns for existing ammo piles
modify:
{
	match:
	{
		"hammerid" "[id]"
	}
	insert:
	{
		"spawnflags" "2"
	}
}
; --- Weapon Spawns - Any weapon type/Standard spawn
; --- NOTE: Count value does not affect versus - weapons are always infinite
; --- Any T1: tier1_any / Pistols: any_pistol, weapon_pistol, weapon_pistol_magnum
; --- SMGs: any_smg, weapon_smg, weapon_smg_silenced / T1 Shotguns: tier1_shotgun, weapon_pumpshotgun, weapon_shotgun_chrome
add:
{
	"classname" "weapon_spawn"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"weapon_selection" "[weapon type]"
	"spawn_without_director" "1"
	"solid" "6"
	"disableshadows" "1"
	"spawnflags" "2"
	"count" "5"
}
; --- Single Pickup Weapon Only
; --- NOTE: CAN be used for single pickup weapons in versus
; --- NOTE: Requires reserve ammo to be specified, otherwise it will have none (value will not exceed max allowed)
add:
{
	"classname" "[weapon type]"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"ammo" "[n]"
	"spawnflags" "1"
}
; --- Melee Weapons
; --- NOTE: Use "any" for a random melee weapon
add:
{
	"classname" "weapon_melee_spawn"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"melee_weapon" "[melee name]"
	"spawn_without_director" "1"
	"solid" "0"
	"disableshadows" "1"
	"spawnflags" "2"
	"count" "1"
}
; --- Item Spawns
; --- Set each item to "1" to allow them to potentially spawn
; --- ITEMS: 1 = Ammo Pile, 2 = First Aid Kit, 3 = Molotov, 4 = Pills, 5 = Pipebomb, 6 = Oxygen Tank, 7 = Propane Tank, 8 = Gas Can
; --- ITEMS: 11 = Adrenaline, 12 = Defib, 13 = Bile, 16 = Chainsaw, 17 = Grenade Launcher, 18 = M60
; --- SPAWNFLAGS: Bitwise 2 = Always Spawn, Bitwise 8 = Infinite
; --- NOTE: Defaults for this entity have some items set to "1", always include every item to prevent unwanted spawning
; --- NOTE: Items 9-10 & 14-15 do not exist
add:
{
	"classname" "weapon_item_spawn"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"spawnflags" "0"
	"item1" "0"
	"item2" "0"
	"item3" "0"
	"item4" "0"
	"item5" "0"
	"item6" "0"
	"item7" "0"
	"item8" "0"
	"item11" "0"
	"item12" "0"
	"item13" "0"
	"item16" "0"
	"item17" "0"
	"item18" "0"
}
; --- Pain Pills only
; --- NOTE: Setting "spawnflags" to "2" will cause the item to ALWAYS spawn, not advised
add:
{
	"classname" "weapon_pain_pills_spawn"
	"origin" "[x y z]"
	"angles" "[p y r]"
}

; #####################  LADDERS  #####################
; --- Add infected ladders by duplicating an existing ladder
; --- Ordering of normals has been corrected to X Y Z, previous ladder implementations were ordered as Z Y X 
; --- Survivor ladders can also be duplicated using team valve of 0, though they are not visible or climbable during the duplication, they will function when loaded via Stripper
; --- NOTE: Any origin coordinate being over 16384 will cause the ladder to function improperly
add:
{
	"classname" "func_simpleladder"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"model" "*[brush number]"
	"normal.x" "[x.00]"
	"normal.y" "[y.00]"
	"normal.z" "[z.00]"
	"team" "2"
}

; #####################  BRUSHES  #####################
; --- Create custom sized brushes by using a logic_auto to fire outputs for parameters
; --- "func_brush" entities are solid and can be used to block LOS, "func_nav_blocker" can be used to block navs
; --- Prefixing the name with "anv_mapfixes_losfix_" allows func_brush entities to be displayed with ShowUpdate()
; --- NOTE: It is NOT possible to rotate these brushes, the collision types that would allow it do not work for bounding boxed brushes
; --- NOTE: If players can collide with the brush it is recommended to create a physics clip around it for better collision
; --- NOTE: Avoid creating func_button with this method, the button detection/pressing on the player's end is very buggy
add:
{
	"classname" "logic_auto"
	"OnMapSpawn" "anv_mapfixes_losfix_[brush name],AddOutput,mins [-x -y -z],0,-1"
	"OnMapSpawn" "anv_mapfixes_losfix_[brush name],AddOutput,maxs [x y z],0,-1"
	"OnMapSpawn" "anv_mapfixes_losfix_[brush name],AddOutput,solid 2,0,-1"
}
{
	"classname" "[brush type]"
	"origin" "[x y z]"
	"targetname" "anv_mapfixes_losfix_[brush name]"
}
; --- Cloning an existing brush to create new brush entities
; --- Entity specific parameters can be added from here
; --- This is the same method of using pre-cached brushes that allows ladders to be cloned
add:
{
	"classname" "[brush type]"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"model" "*[brush number]"
}
; --- Trigger brushes
; --- NOTE: Not all brushes require the boxmins/boxmaxs to be specified, but some brush types such as teleport triggers will not work without them
{
	"classname" "logic_auto"
	"OnMapSpawn" "[trigger name],AddOutput,mins [-x -y -z],0,-1"
	"OnMapSpawn" "[trigger name],AddOutput,maxs [x y z],0,-1"
	"OnMapSpawn" "[trigger name],AddOutput,boxmins [-x -y -z],0,-1"
	"OnMapSpawn" "[trigger name],AddOutput,boxmaxs [x y z],0,-1"
	"OnMapSpawn" "[trigger name],AddOutput,solid 2,0,-1"
}
{
	"classname" "[trigger type]"
	"origin" "[x y z]"
	"targetname" "[trigger name]"
	"filtername" "[filter entity name]"
	"spawnflags" "1"
	; --- Trigger event output here
}
; --- VPhysics Clips
; --- NOTE: Extent defines the mins AND maxs of the brush
; --- NOTE: Brush will not function unless StartDisabled is set to 0, or the brush is enabled by firing an Enable output
{
	"classname" "script_clip_vphysics"
	"origin" "[x y z]"
	"angles" "[p y r]"
	"extent" "[x y z]"
	"filtername" "filter_gascan"
	"StartDisabled" "0"
}

; ####################  I/O LOGIC  ####################
; --- Template for modifying entity input/output logic
; --- All parameters
"[output named]" "[target entities named],[via this input],[parameter override],[delay in seconds],[fire only once]"
; --- No parameter override, no delay, allow firing more than once (default)
"[output named]" "[target entities named],[via this input],,0,-1"

; --- Method for removing _commentary.txt / lump / anv_mapfixes.nut entities
; --- Use logic_auto to do this on a delay after the map has loaded, since they are spawned after the map is loaded
; --- NOTE: For gamemode specific changes use info_gamemode and fire outputs On[Gamemode]PostIO
add:
{
	"classname" "logic_auto"
	"OnMapSpawn" "[entity targetname or classname],Kill,,10,-1"
}


; #####################  NAV MESH  ####################
; --- Entities for modifying anything nav mesh related
; --- point_nav_attribute_region can be used to assign attributes to nav mesh regions defined by the spawnflags used
; --- Once placed these entities must be activated by a logic_auto
; --- 4096: Obscured - allows SI and mobs to spawn without LOS being blocked, 2048: Checkpoint - saferoom nav area
add:
{
	"classname" "point_nav_attribute_region"
	"origin" "[x y z]"
	"mins" "-32 -32 -32"
	"maxs" "32 32 32"
	"spawnflags" "[n]"
	"targetname" "[nav name]"
}
{
	"classname" "logic_auto"
	"OnMapSpawn" "[nav name],ApplyNavAttributes,,10,-1"
}
; --- func_nav_blocker can be used to block or unblock nav mesh regions to improve pathing around obstacles or prevent issues with nav connections
; --- Once placed these entities must be activated by firing either BlockNav or UnblockNav after a small delay
; --- teamToBlock defines which team's navs are affected, -1 = everyone, 2 = survivors, 3 = infected
; --- affectsFlow can be used when flow gets recalculated when the nav blocker is enabled or disabled, but it should only be used where the blocker will ALWAYS be the same for both teams
; --- Recommended to leave at 0
; --- As it potentially causes issues with uneven tank spawns when one team may not activate the blocker but the other team does
add:
{
	"classname" "logic_auto"
	"OnMapSpawn" "[brush name],AddOutput,mins [-x -y -z],0,-1"
	"OnMapSpawn" "[brush name],AddOutput,maxs [x y z],0,-1"
	"OnMapSpawn" "[brush name],AddOutput,solid 2,0,-1"
	"OnMapSpawn" "[brush name],[BlockNav/UnblockNav],,1,-1"
}
{
	"classname" "func_nav_blocker"
	"origin" "[x y z]"
	"targetname" "[brush name]"
	"teamToBlock" "[n]"
	"affectsFlow" "0"
}